% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base.R
\name{varimp_refit}
\alias{varimp_refit}
\title{Variable importance in cross-sectional data}
\usage{
varimp_refit(
  vibr.fit,
  X,
  Y,
  delta = 0.1,
  verbose = TRUE,
  estimator = "AIPW",
  bounded = FALSE,
  updatetype = "weighted",
  estimand = "diff"
)
}
\arguments{
\item{vibr.fit}{a vibr.fit object}

\item{X}{data frame of predictors}

\item{Y}{outcome}

\item{delta}{change in each column of X corresponding to}

\item{verbose}{(logical) print extra information}

\item{estimator}{(character) "AIPW" (default), "TMLE", "GCOMP", "IPW"}

\item{bounded}{(logical) not used}

\item{updatetype}{(character) "weighted" or any other valid character. If "weighted" then uses weighting by clever covariate in update step of TMLE, otherwise fits a generalized linear model with no intercept and clever covariate as a fixed effect.}

\item{estimand}{(character) "diff" (default, estimate mean difference comparing Y under intervention with observed Y), "mean" (estimate mean Y under intervention)}
}
\value{
vibr.fit object
}
\description{
Refitting a variable importance model with outcome regression and propensity scores trained from another model
}
\examples{
\dontrun{
data(metals, package="qgcomp")
XYlist = list(X=metals[,c(1:22, 23)], Y=metals$y)
Y_learners = .default_continuous_learners_big()
Xbinary_learners = .default_binary_learners_big()
Xdensity_learners = .default_density_learners_big()[c(1:4,6:7)]
vi <- varimp(X=XYlist$X,Y=XYlist$Y, delta=0.1, Y_learners = Y_learners,
       Xdensity_learners=Xdensity_learners, Xbinary_learners=Xbinary_learners,
       estimator="TMLE", updatetype="unweighted",estimand="diff")
vi
vi1 <- varimp_refit(vi, X=XYlist$X,Y=XYlist$Y, delta=0.1,
                    estimator="TMLE", updatetype="weighted", estimand="diff")
vi1
vi2 <- varimp_refit(vi, X=XYlist$X,Y=XYlist$Y, delta=0.1,
                    estimator="AIPW")
vi2
vi3 <- varimp_refit(vi, X=XYlist$X,Y=XYlist$Y, delta=0.1,
                    estimator="GCOMP", estimand="mean")
vi3
vi4 <- varimp_refit(vi, X=XYlist$X,Y=XYlist$Y, delta=0.1,
                    estimator="IPW")
vi4

hist(metals$y)
hist(metals$calcium)
hist(metals$total_hardness)
caidx <- which(names(XYlist$X)=="calcium")
plot(metals$calcium, vi1$gfits[[4]]$predict()[[1]], pch=19, cex=0.2)
plot(metals$calcium, metals$y, pch=19, cex=0.2)
plot(metals$total_hardness, vi1$gfits[[21]]$predict()[[1]], pch=19, cex=0.2)
plot(metals$total_hardness, metals$y, pch=19, cex=0.2)
}
}
